dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
calculate_poverty <- function(base,basket,group_vars,print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
View(resultado)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars =c(),print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(Pobreza_resumen)
}
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
#  window = "semestral",
print_summary=TRUE)
resultado <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
#  window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,group_vars =c(),print_summary=TRUE,window = "quarter"){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(base)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
#   group_vars = c(CH04,NIVEL_ED),
#  window = "semestral",
print_summary=TRUE)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
calculate_poverty <- function(base,basket,print_summary=TRUE,window = "quarter",group_vars =c()){
base <- base %>%
dplyr::mutate(periodo = paste(ANO4, TRIMESTRE, sep='.')) %>%
dplyr::left_join(., adulto_equivalente, by = c("CH04", "CH06")) %>%
dplyr::left_join(., basket, by = c('REGION'="codigo", "periodo")) %>%
dplyr::group_by(CODUSU, NRO_HOGAR, periodo)                          %>%
dplyr::mutate(adequi_hogar = sum(adequi))                            %>%
dplyr::ungroup() %>%
dplyr::mutate(CBA_hogar = CBA*adequi_hogar,
CBT_hogar = CBT*adequi_hogar,
situacion = dplyr::case_when(ITF<CBA_hogar            ~ 'indigente',
ITF>=CBA_hogar & ITF<CBT_hogar ~ 'pobre',
ITF>=CBT_hogar           ~ 'no_pobre'),
situacion = dplyr::case_when(PONDIH==0 ~ NA_character_, #excluyo los casos que no tienen respuesta en ITF
TRUE ~ situacion)) %>%
dplyr::select(-adequi,-periodo,-CBA, -CBT)
if (print_summary) {
if(window == "quarter"){
Pobreza_resumen <- base %>%
dplyr::group_by(ANO4,TRIMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
else {
Pobreza_resumen <- base %>%
dplyr::mutate(SEMESTRE = ifelse(TRIMESTRE %in% c(1,2),yes = 1,no = 2)) %>%
dplyr::group_by(ANO4,SEMESTRE,dplyr::across(c({{group_vars}}))) %>%
dplyr::summarise(Tasa_pobreza    = sum(PONDIH[situacion %in% c('pobre', 'indigente')],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE),
Tasa_indigencia = sum(PONDIH[situacion == 'indigente'],na.rm = TRUE)/
sum(PONDIH,na.rm = TRUE))
}
print(Pobreza_resumen)
}
return(base)
}
bases <- dplyr::bind_rows(toybase_individual_2016_03,
toybase_individual_2016_04)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
group_vars = c(CH04,NIVEL_ED),
window = "semestral",
print_summary=TRUE)
base_con_etiquetas <-   calculate_poverty(base = bases,
basket = canastas_reg_example,
print_summary=TRUE,
group_vars = c(CH04,NIVEL_ED),
window = "semestral")
?glue
install.packages("roxygen2")
install.packages("testthat")
remove. packages("roxygen2")
remove.packages("roxygen2")
install.packages("roxygen2", version = "7.1.2")
install.packages("knitr")
pkgdown::build_site()
install.packages("pkgdown")
pkgdown::build_site()
usethis::use_version(which = "minor")
devtools::document()
devtools::check()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_win_devel()
devtools::check_rhub()
devtools::submit_cran()
devtools::check_rhub()
devtools::submit_cran()
pkgdown::build_site()
?noNA
?tempfile
?unlink
?download.file
?glue
library(eph)
eph::get_poverty_lines(regional = FALSE)
a <- eph::get_poverty_lines(regional = FALSE)
View(a)
a <- eph::get_poverty_lines(regional = FALSE)
b <- eph::get_poverty_lines(regional = TRUE)
View(b)
a <- eph::get_poverty_lines(regional = FALSE)
b <- eph::get_poverty_lines(regional = TRUE)
library(eph)
a <- eph::get_poverty_lines(regional = FALSE)
a <- eph::get_poverty_lines(regional = TRUE)
library(eph)
eph::get_microdata(year = 2015, trimester = 4, type = "individual")
eph::get_microdata(year = 2018,trimester = 1,type = "individual")
eph::get_microdata(year = 2022, trimester = 4, type = "individual")
?usethis::use_version()
usethis::use_version(which = "patch")
usethis::use_version(which = "patch")
devtools::document()
devtools::check()
devtools::check_rhub()
source("D:/carol/Documents/Paquete eph/eph/R/eph.R", echo=TRUE)
library(eph)
devtools::document()
devtools::check_rhub()
devtools::check_win_devel()
devtools::check_rhub()
devtools::submit_cran()
pkgdown::build_site()
pak::pkg_deps_explain("eph", "isoband")
install.packages("pak")
pak::pkg_deps_explain("eph", "isoband")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(eph)
library(tidyverse)
library(lubridate)
canastas_regionales <- get_poverty_lines(regional = TRUE)
bases <- get_microdata(year = 2016:2022,
trimester = 1:4,
type =  'individual',
vars = c("ANO4", "TRIMESTRE", "REGION", "CODUSU", "NRO_HOGAR", "CH04", "CH06", "ITF", "PONDIH", "PP07H","PP04D_COD")
#,destfile = 'bases_eph.rds'
)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes(quiet = F)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(eph)
library(tidyverse)
library(lubridate)
canastas_regionales <- get_poverty_lines(regional = TRUE)
bases <- get_microdata(year = 2016:2019,
trimester = 1:4,
type =  'individual',
vars = c("ANO4", "TRIMESTRE", "REGION", "CODUSU", "NRO_HOGAR", "CH04", "CH06", "ITF", "PONDIH", "PP07H","PP04D_COD")
#,destfile = 'bases_eph.rds'
)
bases <- bases %>% unnest(cols = c(microdata))
#bases <- bases %>% unnest(cols = c(microdata))
bases_pobreza <- calculate_poverty(bases, canastas_regionales, print_summary = TRUE)
bases_pobreza
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
pkgdown::build_site()
pkgbuild::check_build_tools(debug = TRUE)
?usethis::use_version
usethis::use_version(which = "patch")
devtools::load_all()
test_base <- get_microdata(2023,1,"individual")
test_base <- test_base %>% organize_labels()
test_base$REGION
calculate_tabulates(test_base,"REGION")
usethis::use_version(which = "patch")
devtools::document()
devtools::check()
devtools::check_rhub()
devtools::check_rhub()
install.packages("curl")
devtools::check_rhub()
devtools::check_rhub()
httr::set_config(httr::config(ssl_verifypeer = 0L))
devtools::check_rhub()
httr::set_config( config( ssl.verifypeer = 0L ) )
httr::set_config(httr::config(ssl.verifypeer = 0L))
devtools::check_rhub()
httr::set_config(httr::config(ssl_verifypeer = 0L))
devtools::check_rhub()
install.packages("curl")
install.packages("httr")
devtools::check_rhub()
options(ssl.verifypeer = NULL)
devtools::check_rhub()
?curl::handle_setopt
httr::set_config(httr::config(ssl.verifypeer = NULL))
devtools::check_rhub()
?handle_reset
handle_reset()
curl::handle_reset()
remove.packages("curl")
remove.packages("httr")
installed.packages("curl")
installed.packages("httr")
library(curl)
install.packages("curl")
install.packages("httr")
devtools::check_rhub()
install.packages("devtools")
install.packages("rhub")
install.packages("devtools")
devtools::check_rhub()
?rhubv2
rhub_setup()
rhub::rhub_setup()
rhub::rhub_check()
?rhub::rhub_platforms()
devtools::check_rhub()
devtools::check_rhub()
devtools::check_rhub()
rhub::rhub_check()
rhub::rhub_check()
rhub::rhub_check(platforms = c("1","3","5"))
rhub::rhub_check(platforms = c("linux","macos-arm64","windows"))
devtools::check_win_devel()
codemetar::write_codemeta()
rhub::validate_email()
rhub::platforms()
rhub::rhub_platforms()
rhub::rhub_check(platforms = c("linux","macos-arm64","windows"))
rhub::rhub_check(platforms = c("linux", "macos-arm64", "windows"), verbose = TRUE)
?rhub::rhub_check
document()
devtools::document()
devtools::document()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::check_win_devel()
devtools::submit_cran()
devtools::submit_cran()
pkgdown::build_site()
library(blogdown)
eph::get_poverty_lines()
devtools::load_all()
get_poverty_lines()
devtools::load_all()
get_poverty_lines()
devtools::document()
devtools::check()
desc_del_dep('attempt')
desc::desc_del_dep('attempt')
devtools::document()
devtools::check()
devtools::check_win_devel()
codemetar::write_codemeta()
devtools::submit_cran()
usethis::use_version(which = "patch")
devtools::document()
codemetar::write_codemeta()
devtools::submit_cran()
test_that("total urbano descarga", {
skip_if_offline()
skip_on_cran()
df <- get_total_urbano(year = 2016, type = "individual", vars = "all")
dimensiones <- dim(df)
expect_equal(dimensiones, c(95782, 152))
})
devtools::load_all()
test_that("total urbano descarga", {
skip_if_offline()
skip_on_cran()
df <- get_total_urbano(year = 2016, type = "individual", vars = "all")
dimensiones <- dim(df)
expect_equal(dimensiones, c(95782, 152))
})
test_that("selec variables", {
skip_if_offline()
skip_on_cran()
df <- get_total_urbano(year = 2016, type = "individual", vars = c("CODUSU", "CH04", "CH06", "PONDERA"))
dimensiones <- dim(df)
expect_equal(dimensiones, c(95782, 4))
})
test_that("antes de 2016", {
skip_if_offline()
skip_on_cran()
expect_warning(df <- get_total_urbano(year = 2009, type = "individual"))
})
test_that("errores", {
expect_warning(df <- get_total_urbano(year = 2016, type = "individu"))
})
test_that("errores", {
expect_warning(df <- get_total_urbano(year = 2016, type = "individu"))
})
get_total_urbano(year = 2016, type = "individu")
get_total_urbano(year = 2009, type = "individual")
devtools::check_win_devel()
devtools::check()
devtools::document()
devtools::submit_cran()
